generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  email         String          
  name          String?
  passwordHash  String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  deletedAt     DateTime?       
  accounts      StreamAccount[]
  @@unique([email, deletedAt])
}

model StreamAccount {
  id            String    @id @default(uuid())
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  provider      String    // e.g. "youtube", "facebook", "twitch"
  accountName   String    // e.g. channel name
  accessToken   String
  refreshToken  String
  expiresAt     DateTime
  deletedAt     DateTime?
  streams       Stream[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  // Optional: unique per user+provider+accountName
  @@unique([userId, provider, accountName, deletedAt])
}

model VideoAsset {
  id          String   @id @default(uuid())
  userId      String
  filename    String
  path        String
  size        Int
  mimetype    String
  originalName String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
  @@unique([filename, userId, deletedAt])
}

model Stream {
  id            String         @id @default(uuid())
  account       StreamAccount  @relation(fields: [accountId], references: [id])
  accountId     String
  broadcastId   String
  title         String
  description   String
  source        String         // video file, playlist, etc
  schedule      DateTime
  status        String
  rtmpUrl       String
  watchingUrl   String
  streamKey     String
  privacy       String?
  loop          Boolean?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  deletedAt     DateTime?
}